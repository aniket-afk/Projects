/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Pharmacy;

import Model.MainAdmin;
import java.awt.CardLayout;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;

/**
 *
 * @author aniketpatole
 */
public class ManagePharmacyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePharmacyJPanel
     */
    
    JPanel MainWorkArea;
    MainAdmin admin;
    String username;
    ManagePharmacyJPanel(JPanel MainWorkArea, MainAdmin admin) {
        initComponents();
        this.MainWorkArea = MainWorkArea;
        this.admin=admin;
        fetchDataFromDatabase();
    }

    ManagePharmacyJPanel(JPanel MainWorkArea, MainAdmin admin, String username) {
        this.MainWorkArea = MainWorkArea;
        this.admin=admin;
        this.username=username;  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRemove = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 102));

        btnRemove.setText("REMOVE");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnView.setText("VIEW");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblRequests.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblRequests);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pharmacy Medicine REQUESTS");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemove)
                        .addGap(144, 144, 144))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(137, 137, 137))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(39, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(192, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();
        int selectedRowIndex = tblRequests.getSelectedRow();

        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row to Delete");
            return;
        }
        else{
            int idToDelete = (int) model.getValueAt(selectedRowIndex, 0); // Assuming the first column is the identifier

            // Remove the selected row from the JTable
            model.removeRow(selectedRowIndex);

            // Remove the corresponding record from the database
            removeRecordFromDatabase(idToDelete);
        }
        }

        private void removeRecordFromDatabase(int id) {
            Connection conn = null;
            PreparedStatement pst = null;

            try {
                conn = DriverManager.getConnection(admin.getDbUrl(), admin.getDbUsername(), admin.getDbPassword());
                String sql = "DELETE FROM PharmacyPurchases WHERE RequestId = ?";
                pst = conn.prepareStatement(sql);
                pst.setInt(1, id);

                int rowsAffected = pst.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Record deleted successfully.");
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete record.", "Database Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                // Close resources
                try {
                    if (pst != null) pst.close();
                    if (conn != null) conn.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRow = tblRequests.getSelectedRow();

        if (selectedRow >= 0) {
            String requestID = tblRequests.getValueAt(selectedRow, 0).toString();
            String patientName = tblRequests.getValueAt(selectedRow, 1).toString();
            String patientContact = tblRequests.getValueAt(selectedRow, 2).toString();
            String patientEmail = tblRequests.getValueAt(selectedRow, 3).toString();
            String doctorName = tblRequests.getValueAt(selectedRow, 4).toString();
            String Medicine = tblRequests.getValueAt(selectedRow, 5).toString();
            String count = tblRequests.getValueAt(selectedRow, 6).toString();

            PharmacyMedicinePurchase viewPanel = new PharmacyMedicinePurchase(MainWorkArea, admin, requestID, patientName, patientContact, patientEmail, doctorName, Medicine, count);
            MainWorkArea.add("PharmacyMedicinePurchase", viewPanel);

            CardLayout layout = (CardLayout) MainWorkArea.getLayout();
            layout.next(MainWorkArea);
        } else if (selectedRow < 0){
            JOptionPane.showMessageDialog(this,"Please select a row to view.");
        }
    }

        private String getStringValueAt(javax.swing.JTable table, int row, int column) {
            Object value = table.getValueAt(row, column);
            return (value != null) ? value.toString() : "";
        }
        private void fetchDataFromDatabase() {
            Connection conn = null;
            PreparedStatement pst = null;

            try {
                conn = DriverManager.getConnection(admin.getDbUrl(), admin.getDbUsername(), admin.getDbPassword());

                // Execute a query to fetch all staff members
                String query = "SELECT RequestId,PatientName,PatientContact,PatientEmail,DoctorName, Medicine, Count FROM PharmacyPurchases";
                pst = conn.prepareStatement(query);

                // Get the result set from the prepared statement
                ResultSet resultSet = pst.executeQuery();

                // Populate the table with data from the result set
                populateTable(resultSet);

                // Close the result set and statement
                resultSet.close();
                pst.close();
                conn.close();

            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        private void populateTable(ResultSet resultSet) {
            try {
                DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();
                model.setRowCount(0);

                ResultSetMetaData metaData = resultSet.getMetaData();
                int columnCount = metaData.getColumnCount();

                String[] columnNames = new String[columnCount];
                for (int i = 1; i <= columnCount; i++) {
                    columnNames[i - 1] = metaData.getColumnName(i);
                }

                model.setColumnIdentifiers(columnNames);

                while (resultSet.next()) {

                    Object[] rowData = new Object[columnCount];
                    for (int i = 1; i <= columnCount; i++) {
                        rowData[i - 1] = resultSet.getObject(i);
                    }
                    model.addRow(rowData);
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        PharmacyAdminJPanel panel =  new PharmacyAdminJPanel(MainWorkArea, admin,username);
        MainWorkArea.add("PharmacyAdminJPanel",panel);
        CardLayout layout = (CardLayout) MainWorkArea.getLayout();
        layout.next(MainWorkArea);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRequests;
    // End of variables declaration//GEN-END:variables
}
