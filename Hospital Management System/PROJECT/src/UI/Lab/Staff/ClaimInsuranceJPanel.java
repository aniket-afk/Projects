/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Lab.Staff;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import Model.MainAdmin;
import java.awt.CardLayout;
import java.sql.ResultSet;
import javax.swing.JPanel;
/**
 *
 * @author Ritik
 */
public class ClaimInsuranceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ClaimInsuranceJPanel
     */
    MainAdmin admin;
    private JPanel MainWorkArea;
    private String username;
    
    public ClaimInsuranceJPanel(JPanel MainWorkArea,MainAdmin admin,String username) {
        initComponents();
        this.admin=admin;
        this.MainWorkArea= MainWorkArea;
        this.username=username;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtInsuranceNumber = new javax.swing.JTextField();
        btnCheckIN = new javax.swing.JButton();
        btnClaimInsurance = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INSURANCE DETAILS");

        jLabel2.setText("Insurance Number");

        btnCheckIN.setBackground(new java.awt.Color(204, 204, 204));
        btnCheckIN.setText("Check If Insurance Is Applicable?");
        btnCheckIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckINActionPerformed(evt);
            }
        });

        btnClaimInsurance.setText("CLAIM INSURANCE");
        btnClaimInsurance.setEnabled(false);
        btnClaimInsurance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClaimInsuranceActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel3.setText("Registered Name");

        jLabel4.setText("Registered Email");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(btnClaimInsurance, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCheckIN, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtInsuranceNumber, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtEmail)
                        .addGap(4, 4, 4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInsuranceNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCheckIN)
                .addGap(35, 35, 35)
                .addComponent(btnClaimInsurance, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(254, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtInsuranceNumber, txtName});

    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckINActionPerformed
        // TODO add your handling code here:
        String insuranceNumber  = txtInsuranceNumber.getText().trim();
        String name  = txtName.getText();
       String email = txtEmail.getText();
        
        if (insuranceNumber.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter an Insurance Number");
        return;
    }

    // Perform the database query to check if the insurance is applicable
    boolean isInsuranceApplicable = isInsuranceApplicable(insuranceNumber,name,email);

    // Display the result based on the query
    if (isInsuranceApplicable) {
        JOptionPane.showMessageDialog(this, "Insurance is Applicable for the provided Insurance Number");
        btnClaimInsurance.setEnabled(true);
    } else {
        JOptionPane.showMessageDialog(this, "Insurance is NOT Applicable for the provided Insurance Number");
    }
    }//GEN-LAST:event_btnCheckINActionPerformed

    private void btnClaimInsuranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClaimInsuranceActionPerformed
       String insuranceNumber =  txtInsuranceNumber.getText().trim();
       String name  = txtName.getText();
       String email = txtEmail.getText();
       if (insuranceNumber.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter an Insurance Number");
        return;
    }
       if (name.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter an Registered Name");
        return;
    }
       
        if (email.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter an Registered EmailID");
        return;
    }
       
       
       
    boolean isInsuranceApplicable = isInsuranceApplicable(insuranceNumber,name,email);

    // Display the result based on the query
    if (isInsuranceApplicable) {
        // Update the Type_of_Payment field to 'Insurance' in the TestRequest table
        if (updatePaymentType(insuranceNumber,name,email)) {
            JOptionPane.showMessageDialog(this, "Insurance Claim Successful");
            
        } else {
            JOptionPane.showMessageDialog(this, "Please try again.");
        }
    } 

    }//GEN-LAST:event_btnClaimInsuranceActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ManageCompletedTestRequestJPanel panel =  new ManageCompletedTestRequestJPanel(MainWorkArea, admin,username);
        MainWorkArea.add("ManageCompletedTestRequestJPanel",panel);
        CardLayout layout = (CardLayout) MainWorkArea.getLayout();
        layout.next(MainWorkArea);
    }//GEN-LAST:event_btnBackActionPerformed
    
private boolean isInsuranceApplicable(String insuranceNumber, String name, String email) {
      Connection conn = null;
      PreparedStatement pst = null;
      ResultSet rs = null;
        try {
           
            conn = DriverManager.getConnection(admin.getDbUrl(), admin.getDbUsername(), admin.getDbPassword());
            String sql = "SELECT * FROM InsuranceCustomer WHERE insurance_number = ? AND name = ? AND email = ?";
        pst = conn.prepareStatement(sql);

        // Set the parameter in the query
        pst.setString(1, insuranceNumber);
        pst.setString(2, name);
        pst.setString(3, email);
        // Execute the query
        rs = pst.executeQuery();

        // Check if the result set is not empty (insurance is applicable)
        return rs.next();
    } catch (Exception e) {
        e.printStackTrace();
        // Handle database error (e.g., log or show an error message)
        JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        return false; // Assuming an error means insurance is not applicable
    } finally {
        // Close resources
        try {
            if (rs != null) rs.close();
            if (pst != null) pst.close();
            if (conn != null) conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
        private boolean updatePaymentType(String insuranceNumber, String name, String email) {
    Connection conn = null;
     PreparedStatement pstSelect = null;
    PreparedStatement pstUpdate = null;
    ResultSet rs = null;

    try {
        // Step 1: Retrieve insurance information from InsuranceCustomer table
        conn = DriverManager.getConnection(admin.getDbUrl(), admin.getDbUsername(), admin.getDbPassword());
        String selectSql = "SELECT * FROM InsuranceCustomer WHERE insurance_number = ? AND name = ? AND email = ?";
        pstSelect = conn.prepareStatement(selectSql);
        pstSelect.setString(1, insuranceNumber);
        pstSelect.setString(2, name);
        pstSelect.setString(3, email);
        rs = pstSelect.executeQuery();

        // Check if the insurance number exists in the InsuranceCustomer table
        if (!rs.next()) {
            JOptionPane.showMessageDialog(this, "Insurance information not found for the provided Insurance Number");
            return false;
        }

        // Step 2: Update Type_of_Payment in TestRequest table
        String updateSql = "UPDATE TestRequest SET Type_of_Payment = 'Insurance', InsuranceNumber =" + insuranceNumber + " WHERE PatientName = ? AND PatientEmail = ?";
        pstUpdate = conn.prepareStatement(updateSql);
        
        
        pstUpdate.setString(1, name);
        pstUpdate.setString(2, email);

        // Execute the update query
        int rowsAffected = pstUpdate.executeUpdate();

        return rowsAffected > 0;
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        return false;
    } finally {
        // Close resources
        try {
            if (rs != null) rs.close();
            if (pstSelect != null) pstSelect.close();
            if (pstUpdate != null) pstUpdate.close();
            if (conn != null) conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckIN;
    private javax.swing.JButton btnClaimInsurance;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtInsuranceNumber;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
